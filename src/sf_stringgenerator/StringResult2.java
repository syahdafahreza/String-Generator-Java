package sf_stringgenerator;
import java.awt.Frame;
import sf_stringgenerator.VariableModule;
import java.util.Random;
import javax.swing.JOptionPane;
import java.awt.datatransfer.StringSelection;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Syahda Fahreza
 * https://syahdafahreza.my.id
 */
public class StringResult2 extends javax.swing.JFrame {

    /**
     * Creates new form StringResult
     */
    public StringResult2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hasilField01 = new javax.swing.JTextField();
        hasilField02 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnCopy01 = new javax.swing.JButton();
        btnCopy02 = new javax.swing.JButton();
        btnGoBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("String Result");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(null);
        setIconImages(null);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        hasilField01.setEditable(false);
        hasilField01.setFocusable(false);

        hasilField02.setEditable(false);
        hasilField02.setFocusable(false);

        jButton1.setText("Generate more!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnCopy01.setText("Copy Text");
        btnCopy01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopy01ActionPerformed(evt);
            }
        });

        btnCopy02.setText("Copy Text");
        btnCopy02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopy02ActionPerformed(evt);
            }
        });

        btnGoBack.setText("Go Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hasilField01)
                    .addComponent(hasilField02, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCopy01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCopy02, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGoBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hasilField01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCopy01))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hasilField02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCopy02))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        int n = VariableModule.lgChar;
        int g = VariableModule.genChar;
        int expression = g;
        String hasilFieldChk01;
        String hasilFieldChk02;
        
        hasilFieldChk01 = hasilField01.getText();
        hasilFieldChk02 = hasilField02.getText();
        
        // Switch Case
        switch(expression){
         case 1 :
             /* 
              * Pernyata ini akan di eksekusi jika value/nilai pada 
              * expression sama dengan nilai yang ada pada block pertama.
              */
             
             hasilField01.setText(RandomString.getAlphaNumericString(n));
             
             //If text field kosong button e gaiso dipenek
             if (hasilFieldChk02!= null)
{
  // block of code to be executed if the condition is true
  btnCopy02.setEnabled(false);
}
             break;

         case 2 :
             /* 
              * Pernyata ini akan di eksekusi jika value/nilai pada
              * expression sama dengan nilai yang ada pada block kedua.
              */
             hasilField01.setText(RandomString.getAlphaNumericString(n));
             hasilField02.setText(RandomString.getAlphaNumericString(n));
             
             //If text field kosong button e gaiso dipenek

{
  // block of code to be executed if the condition is true
}
             break;
             
         default :
             /* 
              * Pernyata ini akan di eksekusi jika tidak ada 
              * kondisi atau expression yang memenuhi syarat
              */
             String noOptSelection;
             noOptSelection= "Test";
             JOptionPane.showMessageDialog(this, noOptSelection);
             
             break;
        }
        // Get and display the alphanumeric string
    }//GEN-LAST:event_formWindowOpened

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        // TODO add your handling code here:
        Frame resultFrameUI = this;
        resultFrameUI.setVisible(false);
        new StringGeneratorUI().setVisible(true);
        
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        Frame resultFrameUI = this;
        resultFrameUI.setVisible(false);
        new StringGeneratorUI().setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void btnCopy01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopy01ActionPerformed
        // TODO add your handling code here:
        String hasilFieldChk01;
        hasilFieldChk01 = hasilField01.getText();
        StringSelection stringSelection = new StringSelection(hasilFieldChk01);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_btnCopy01ActionPerformed

    private void btnCopy02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopy02ActionPerformed
        // TODO add your handling code here:
        String hasilFieldChk02;
        hasilFieldChk02 = hasilField02.getText();
        StringSelection stringSelection = new StringSelection(hasilFieldChk02);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_btnCopy02ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int n = VariableModule.lgChar;
        int g = VariableModule.genChar;
        int expression = g;
        // Switch Case
        switch(expression){
            case 1 :
            /*
            * Pernyata ini akan di eksekusi jika value/nilai pada
            * expression sama dengan nilai yang ada pada block pertama.
            */
            hasilField01.setText(RandomString.getAlphaNumericString(n));
            break;

            case 2 :
            /*
            * Pernyata ini akan di eksekusi jika value/nilai pada
            * expression sama dengan nilai yang ada pada block kedua.
            */
            hasilField01.setText(RandomString.getAlphaNumericString(n));
            hasilField02.setText(RandomString.getAlphaNumericString(n));
            break;

            default :
            /*
            * Pernyata ini akan di eksekusi jika tidak ada
            * kondisi atau expression yang memenuhi syarat
            */
            String noOptSelection;
            noOptSelection= "Test";
            JOptionPane.showMessageDialog(this, noOptSelection);

            break;
        }
        // Get and display the alphanumeric string
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StringResult2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StringResult2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StringResult2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StringResult2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StringResult2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopy01;
    private javax.swing.JButton btnCopy02;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JTextField hasilField01;
    private javax.swing.JTextField hasilField02;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
